# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class GptMessage(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, message: str=None, tailoring: str=None, conversation_id: str=None):  # noqa: E501
        """GptMessage - a model defined in Swagger

        :param message: The message of this GptMessage.  # noqa: E501
        :type message: str
        :param tailoring: The tailoring of this GptMessage.  # noqa: E501
        :type tailoring: str
        :param conversation_id: The conversation_id of this GptMessage.  # noqa: E501
        :type conversation_id: str
        """
        self.swagger_types = {
            'message': str,
            'tailoring': str,
            'conversation_id': str
        }

        self.attribute_map = {
            'message': 'message',
            'tailoring': 'tailoring',
            'conversation_id': 'conversation_id'
        }
        self._message = message
        self._tailoring = tailoring
        self._conversation_id = conversation_id

    @classmethod
    def from_dict(cls, dikt) -> 'GptMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The gptMessage of this GptMessage.  # noqa: E501
        :rtype: GptMessage
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self) -> str:
        """Gets the message of this GptMessage.


        :return: The message of this GptMessage.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this GptMessage.


        :param message: The message of this GptMessage.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")  # noqa: E501

        self._message = message

    @property
    def tailoring(self) -> str:
        """Gets the tailoring of this GptMessage.


        :return: The tailoring of this GptMessage.
        :rtype: str
        """
        return self._tailoring

    @tailoring.setter
    def tailoring(self, tailoring: str):
        """Sets the tailoring of this GptMessage.


        :param tailoring: The tailoring of this GptMessage.
        :type tailoring: str
        """

        self._tailoring = tailoring

    @property
    def conversation_id(self) -> str:
        """Gets the conversation_id of this GptMessage.


        :return: The conversation_id of this GptMessage.
        :rtype: str
        """
        return self._conversation_id

    @conversation_id.setter
    def conversation_id(self, conversation_id: str):
        """Sets the conversation_id of this GptMessage.


        :param conversation_id: The conversation_id of this GptMessage.
        :type conversation_id: str
        """

        self._conversation_id = conversation_id
